{"ast":null,"code":"var _jsxFileName = \"/Users/aditek/Desktop/react-advanced/src/tutorial/1-useState/setup/5-useState-counter.js\";\nimport React, { useState } from \"react\";\n\nconst UseStateCounter = () => {\n  const [value, setValue] = useState(0);\n\n  const decreaseCount = () => {\n    setValue(value - 1);\n  };\n\n  const increaseCount = () => {\n    setValue(value + 1);\n  };\n\n  const resetValue = () => {\n    setValue(0);\n  };\n\n  const complexIncrease = () => {\n    setTimeout(() => {\n      // by doing this, we are getting the old stale value, so whenever we click \n      setValue(value + 1);\n    }, 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      margin: \"4rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"regular counter\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, value), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => decreaseCount(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Decrease\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => increaseCount(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Increase\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => resetValue(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Reset Value\")), /*#__PURE__*/React.createElement(\"section\", {\n    style: {\n      margin: \"4rem 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Complex counter\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, value), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: () => complexIncrease(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"Complex Increase\")));\n};\n\nexport default UseStateCounter;","map":{"version":3,"sources":["/Users/aditek/Desktop/react-advanced/src/tutorial/1-useState/setup/5-useState-counter.js"],"names":["React","useState","UseStateCounter","value","setValue","decreaseCount","increaseCount","resetValue","complexIncrease","setTimeout","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMI,aAAa,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAGA,QAAMG,aAAa,GAAG,MAAM;AAC1BF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAG,MAAM;AACvBH,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACD,GAFD;;AAGA,QAAMI,eAAe,GAAG,MAAM;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACf;AACAL,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,KAHS,EAGP,IAHO,CAAV;AAID,GALD;;AAMA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,KAAK,EAAE;AAAEO,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAE,MAAME,aAAa,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAE,MAAMC,aAAa,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eASE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAE,MAAMC,UAAU,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADF,eAcE;AAAS,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CAFF,eAGE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAE,MAAMK,eAAe,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,CAdF,CADF;AAwBD,CAzCD;;AA2CA,eAAeN,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst UseStateCounter = () => {\n  const [value, setValue] = useState(0);\n  const decreaseCount = () => {\n    setValue(value - 1);\n  };\n  const increaseCount = () => {\n    setValue(value + 1);\n  };\n  const resetValue = () => {\n    setValue(0);\n  };\n  const complexIncrease = () => {\n    setTimeout(() => {\n      // by doing this, we are getting the old stale value, so whenever we click \n      setValue(value + 1);\n    }, 2000);\n  };\n  return (\n    <React.Fragment>\n      <section style={{ margin: \"4rem 0\" }}>\n        <h2>regular counter</h2>\n        <h1>{value}</h1>\n        <button className=\"btn\" onClick={() => decreaseCount()}>\n          Decrease\n        </button>\n        <button className=\"btn\" onClick={() => increaseCount()}>\n          Increase\n        </button>\n        <button className=\"btn\" onClick={() => resetValue()}>\n          Reset Value\n        </button>\n      </section>\n      <section style={{ margin: \"4rem 0\" }}>\n        <h2>Complex counter</h2>\n        <h1>{value}</h1>\n        <button className=\"btn\" onClick={() => complexIncrease()}>\n          Complex Increase\n        </button>\n      </section>\n    </React.Fragment>\n  );\n};\n\nexport default UseStateCounter;\n"]},"metadata":{},"sourceType":"module"}